name: Tasmota Esp Flasher

on:
  workflow_dispatch:  # Manually start a workflow
  push:
    tags:
      - "*.*.*"
    branches:
      - factory
    paths-ignore:
      - '.github/**' # Ignore changes towards the .github directory
      - '*.md'
  pull_request:
    branches:
      - factory

jobs:
  build-windows:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: Install requirements
        run: |
          pip install -r requirements.txt -r requirements_build.txt
          pip install -e .
      - name: Run PyInstaller
        run: |
          python -m PyInstaller.__main__ -F -w -n ESP-Flasher -i icon.ico esp_flasher\__main__.py
      - uses: jason2866/upload-artifact@v2.0.3
        with:
          name: Windows
          path: dist/ESP-Flasher.exe

  build-ubuntu:
    runs-on: ubuntu-20.04
    steps:
     - name: Checkout
       uses: actions/checkout@v4
     - name: Install Python
       uses: actions/setup-python@v5
       with:
         python-version: '3.9'
     - name: Install dependencies
       run: |
         sudo apt update
         sudo apt install libnotify-dev libsdl2-dev
     - name: Install requirements
       run: |
         pip install -r requirements.txt -r requirements_build.txt
         pip install -e .
     - name: Run PyInstaller
       run: |
         python -m PyInstaller.__main__ -F -w -n ESP-Flasher -i icon.ico esp_flasher/__main__.py
     - name: See dist directory
       run: ls dist
     - name: 'Tar files'
       run: gzip dist/ESP-Flasher
     - name: 'show gzip'
       run: ls dist
     - uses: jason2866/upload-artifact@v2.0.3
       with:
         name: Ubuntu
         path: dist/ESP-Flasher.gz

  build-macos:
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install requirements
        run: |
          pip install -r requirements.txt -r requirements_build.txt
          pip install -e .
      - name: Run PyInstaller
        run: |
          python -m PyInstaller.__main__ -F -w -n ESP-Flasher -i icon.icns esp_flasher/__main__.py
      - name: See dist directory
        run: ls dist
      - name: Move app
        run: |
          mv dist/ESP-Flasher.app dist/ESP-Flasher-macOS.app
      - name: 'Tar files'
        run: tar -cvf dist.tar dist/*
      - name: 'Upload Artifact'
        uses: jason2866/upload-artifact@v2.0.3
        with:
          name: macOS
          path: dist.tar

  build-macos-arm:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install requirements
        run: |
          pip install -r requirements.txt -r requirements_build.txt
          pip install -e .
      - name: Run PyInstaller
        run: |
          python -m PyInstaller.__main__ -F -w -n ESP-Flasher -i icon.icns esp_flasher/__main__.py
      - name: See dist directory
        run: ls dist
      - name: Move app
        run: |
          mv dist/ESP-Flasher.app dist/ESP-Flasher-macOSarm.app
      - name: 'Tar files'
        run: tar -cvf dist.tar dist/*
      - name: 'Upload Artifact'
        uses: jason2866/upload-artifact@v2.0.3
        with:
          name: macOSarm
          path: dist.tar

  release:
      name: Upload binaries to release section
      needs: [build-windows, build-ubuntu, build-macos, build-macos-arm]
      if: startsWith(github.ref, 'refs/tags/')
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            ref: factory
        - name: Download built binaries artifacts
          uses: jason2866/download-artifact@v3.0.4
          with:
            name: |
              Windows
              Ubuntu
              macOS
              macOSarm
            path: |
              ESP-Flasher.exe
              Ubuntu-ESP-Flasher.gz
              macOS-ESP-Flasher.tar
              macOSarm-ESP-Flasher.tar
        - name: Display downloaded artifact files
          run: |
            ls -R ./
        - name: Release
          uses: jason2866/action-gh-release@v1.3
          with:
            prerelease: false
            files: |
              /home/runner/work/ESP_Flasher/ESP_Flasher/*.gz
              /home/runner/work/ESP_Flasher/ESP_Flasher/*.exe
              /home/runner/work/ESP_Flasher/ESP_Flasher/*.tar
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
